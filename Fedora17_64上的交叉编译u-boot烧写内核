
********************************************************************************
安装arm-linux-guneabihf
********************************************************************************
git clone https://github.com/warriorlious/tools.git

使用make cubieboard CROSS_COMPILE=arm-none-linux-gnueabi-
编译成功u-boot
生成spl/u-boot-spl.bin

得到的tools目录为工具，mkimage将用于内核编译，可将其连接到/usr/bin

************************************************************************
编译sunxi-tools-master
直接make发现未找到库libusb.h
于是安装libusb*
安装了5个包
make成功得到fex2bin

**************************************************************************
sunxi-boards
这个是配置文件
在A10目录中找到cubieboard_1gb.fex

使用上一步骤得到的fex2bin
fex2bin cubeboard_1gb.fex script.bin

***************************************************************************
编译内核
进行配置设置：
make ARCH=arm sun4i_defconfig
配置内核：
make ARCH=arm menuconfig
编译uImage:
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j4 uImage
编译驱动模块：
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j4 INSTALL_MODPATH=output modules
安装内核模块：
make ARCH=arm CROSS_COMPILE=arm-none-linux-gnueabi- -j4 INSTALL_MODPATH=output modules_install

*****************************************************************************
制作SD启动卡：

1M的区域填充为0,预留给 u‐boot 和 spl/sunxi‐spl.bin:
dd if=/dev/zero of=/dev/sdc bs=1M count=1

重新读取/dev/sdb,因为我们已经改变了sdc:
sfdisk -R /dev/sdc

对sd卡进行分区,具体请参照sfdisk命令手册
cat <<EOT | sfdisk -uM /dev/sdc
> 1,16,c        #从SD卡的1M处开始,划分16M长度为第一个分区
> 23,,L         #余下的空间为第二个分区 (参考网站上使用的是 17,,L,这是错误的,重>叠了)
> EOT

格式化为fat
mkfs.vfat /dev/sdc1
格式化为ext4
mkfs.ext4 /dev/sdc2

u-boot路径下：
cp spl/u-boot-spl.bin spl/suxi-spl.bin

写入bootloader:
dd if=spl/suxi-spl.bin of=/dev/sdc bs=1024 seek=8
dd if=u-boot.bin of=/dev/sdc bs=1024 seek=32


安装uImage:

mount /dev/sdc1 /mnt
mkdir /mnt/boot
cp ../linux-sunxi/arch/arm/boot/uImage /mnt/boot
cp ../../sunxi-tools-master/script.bin /mnt/boot

设置启动参数：
vim ~/boot.cmd

setenv bootargs bootargs console=ttyS0,115200 noinitrd init=/init root=/dev/mmcblk0p2 rootfstype=ext4 rootwait panic=10 ${extra}
fatload mmc 0 0x43000000 boot/script.bin
fatload mmc 0 0x48000000 boot/uImage
bootm 0x48000000

生成boot.scr文件
cd
mkimage -C none -A arm -T script -d boot.cmd boot.scr

cp boot.scr /mnt

